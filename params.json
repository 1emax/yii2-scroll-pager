{"name":"Yii2-scroll-pager","tagline":"Infinite AJAX scrolling for Yii2 ListView widget","body":"Yii2 Scroll Pager\r\n==========================\r\n\r\n[Yii2 Scroll Pager (Y2SP)](http://kop.github.io/yii2-scroll-pager) turns your regular paginated page into an\r\ninfinite scrolling page using AJAX.\r\n\r\nY2SP works with a `Pagination` object which specifies the totally number of pages and the current page number.\r\n\r\nPager is build with help of [JQuery Infinite Ajax Scroll plugin](https://github.com/webcreate/infinite-ajax-scroll).\r\n\r\n\r\n## Requirements\r\n\r\n- Yii 2.0 (dev-master)\r\n- PHP 5.4\r\n\r\n> Note:\r\nThis extension mandatorily requires [Yii Framework 2](https://github.com/yiisoft/yii2).\r\nThe framework is under active development and the first stable release of Yii 2 is expected in early 2014.\r\n\r\n\r\n## Installation\r\n\r\nThe preferred way to install this extension is through [Composer](http://getcomposer.org/).\r\n\r\nEither run\r\n\r\n``` php composer.phar require kop/yii2-scroll-pager \"dev-master\" ```\r\n\r\nor add\r\n\r\n``` \"kop/yii2-scroll-pager\": \"dev-master\"```\r\n\r\nto the `require` section of your `composer.json` file.\r\n\r\n\r\n## Usage\r\n\r\nJust pass the ScrollPager class name to the ListView `pager` configuration.\r\nMake sure that items in your list have some classes that can be used as JavaScript selectors.\r\n\r\n```php\r\necho ListView::widget([\r\n     'dataProvider' => $dataProvider,\r\n     'itemOptions' => ['class' => 'item'],\r\n     'itemView' => '_item_view',\r\n     'pager' => ['class' => \\kop\\y2sp\\ScrollPager::className()]\r\n]);\r\n```\r\n\r\n\r\n## Configuration\r\n\r\n### `container`\r\n\r\n*Default:* \".list-view\"\r\n\r\nEnter the selector of the element containing your items that you want to paginate.\r\n\r\n### `item`\r\n\r\n*Default:* \".item\"\r\n\r\nEnter the selector of the element that each item has. Make sure the elements are inside the container element.\r\n\r\n### `noneLeft`\r\n\r\n*Default:* false\r\n\r\nContains the message to be displayed when there are no more pages left to load.\r\n\r\n### `loader`\r\n\r\n*Default:* `<img src=\"images/loader.gif\"/>` ![Spinner Image](https://raw2.github.com/kop/yii2-scroll-pager/master/assets/infinite-ajax-scroll/images/loader.gif)\r\n\r\nLoader spinner. This HTML element will be displayed when the next page with items is loaded via AJAX.\r\n\r\n### `loaderDelay`\r\n\r\n*Default:* 600\r\n\r\nMinimal time (in milliseconds) the loader should be displayed before rendering the items of the next page.\r\nNote: This setting will _not_ actually delay the the loading of items itself.\r\n\r\n### `triggerPageThreshold`\r\n\r\n*Default:* 3\r\n\r\nPage number after which a 'Load more items' link is displayed.\r\nUsers will manually trigger the loading of the next page by clicking this link.\r\n\r\n### `trigger`\r\n\r\n*Default:* \"Load more items\"\r\n\r\nText of the manual trigger link.\r\n\r\n### `thresholdMargin`\r\n\r\n*Default:* 0\r\n\r\nOn default IAS starts loading new items when you scroll to the latest .item element.\r\nThe thresholdMargin will be added to the items' offset, giving you the ability to load new items earlier\r\n(please note that the margin should be a negative integer for this case).\r\n\r\nFor example:\r\n\r\nSetting a thresholdMargin of -250 means that IAS will start loading 250 pixel _before_ the last item has scrolled into view.\r\nA positive margin means that IAS will load new items N pixels after the last item.\r\n\r\n### `history`\r\n\r\n*Default:* true\r\n\r\nSet this to false to disable the history module.\r\n\r\nThe IAS history module uses hashes (in the format \"#/page/<num>\") to remember the last viewed page,\r\nso when a visitor hits the back button after visiting an item from that page,\r\nit will load all items up to that last page and scrolls it into view.\r\nThe use of hashes can be problematic in some cases, in which case you can disable this feature.\r\n\r\n### `scrollContainer`\r\n\r\n*Default:* `$(window)`\r\n\r\nBy default, scroll events are listened from the `$(window)` object.\r\nYou can use this setting to specify a custom container, for example a div with overflow.\r\n\r\n\r\n## Report\r\n\r\n- Report any issues [on the GitHub](https://github.com/kop/yii2-scroll-pager/issues).\r\n\r\n\r\n## License\r\n\r\n**yii2-scroll-pager** is released under the MIT License. See the bundled `LICENSE.md` for details.\r\n\r\n\r\n## Resources\r\n\r\n- [Project Page](http://kop.github.io/yii2-scroll-pager)\r\n- [Packagist Package](https://packagist.org/packages/kop/yii2-scroll-pager)\r\n- [Source Code](https://github.com/kop/yii2-scroll-pager)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}